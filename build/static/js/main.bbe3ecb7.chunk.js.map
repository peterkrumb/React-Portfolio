{"version":3,"sources":["components/images/proj1.png","components/images/garage2 0.png","components/pages/About.js","components/Nav.js","components/pages/Education.js","components/pages/Skills.js","components/Project.js","components/pages/Projects.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","About","class","href","id","React","Component","Nav","location","useLocation","to","className","pathname","Education","Skills","Project","src","require","alt","Projects","App","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.bbe3ecb7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/proj1.005cfadd.png\";","module.exports = __webpack_public_path__ + \"static/media/garage2 0.c72d4de0.png\";","import React from \"react\";\r\n\r\nclass About extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div class=\"container\">\r\n          <div class=\"row\">\r\n            <div class=\"text\">\r\n              <h1 class=\"bio-header\">\r\n                Peter\r\n                <span class=\"text-primary\"> Krumb</span>\r\n              </h1>\r\n              <div class=\"subheading mb-5\">\r\n                332 Wesley Ave · Oak Park, IL 60302 · (708) 646-3556 ·\r\n                <a href=\"mailto:petekrumb@gmail.com\">petekrumb@gmail.com</a>\r\n              </div>\r\n              <section id=\"main-bio\">\r\n                <p>\r\n                  My name is Peter Krumb, and I am a software developer and\r\n                  recent graduate of Northwestern University's Full Stack web\r\n                  development bootcamp. My development skills have included the\r\n                  basics such as HTML, CSS, and JavaScript, but also expand to\r\n                  more extensive parts of JavaScript such as Node and React. My\r\n                  background is in the hospitality industry, however currently\r\n                  I'm working to break into tech industry as I see much\r\n                  potential for growth, opportunities, and learning in general.\r\n                  I love a challenge and this bootcamp has re-acquainted me with\r\n                  the learning process again.{\" \"}\r\n                </p>\r\n              </section>\r\n              <div class=\"social-icons\">\r\n                <a href=\"http://www.linkedin.com/in/peter-krumb-0969a49a\">\r\n                  <i class=\"fab fa-linkedin-in\"></i>\r\n                </a>\r\n                <a href=\"https://github.com/peterkrumb\">\r\n                  <i class=\"fab fa-github\"></i>\r\n                </a>\r\n                <a href=\"http://www.facebook.com/krumbdiggity\">\r\n                  <i class=\"fab fa-facebook-f\"></i>\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default About;\r\n","import React from 'react';\r\nimport { Link, useLocation } from \"react-router-dom\";\r\n\r\nfunction Nav() {\r\n  // We'll go into the Hooks API later, for now, we are just using some code\r\n  // from the react-router docs (https://reacttraining.com/react-router/web/api/Hooks/uselocation)\r\n  // This allows the component to check the route any time the user uses a link to navigate.\r\n  const location = useLocation();\r\n        return(<div>\r\n            <div class=\"sidenav\">\r\n            <Link to=\"/\" className={location.pathname === \"/\" ? \"nav-link active\" : \"nav-link\"}>Home</Link>\r\n            <Link to=\"/Education\"  className={location.pathname === \"/Education\" ? \"nav-link active\" : \"nav-link\"}>Education</Link>\r\n            <Link to=\"/Skills\"  className={location.pathname === \"/Skills\" ? \"nav-link active\" : \"nav-link\"}>Skills</Link>\r\n            <Link to=\"/Projects\"  className={location.pathname === \"/Projects\" ? \"nav-link active\" : \"nav-link\"}>Projects</Link>\r\n          </div>\r\n    \r\n          </div>\r\n        )\r\n}\r\n\r\nexport default Nav;","import React from 'react'\r\n\r\nclass Education extends React.Component {\r\n    render() {\r\n        return(\r\n            <div>\r\n                <section class=\"resume-section p-3 p-lg-5 d-flex align-items-center\" id=\"education\">\r\n      <div class=\"w-100\">\r\n        <h2 class=\"mb-5\">Education</h2>\r\n\r\n        <div class=\"resume-item d-flex flex-column flex-md-row justify-content-between mb-5\">\r\n          <div class=\"resume-content\">\r\n            <h3 class=\"mb-0\">University of Denver</h3>\r\n\r\n          </div>\r\n          <div class=\"resume-date text-md-right\">\r\n            <span class=\"text-primary\">August 2013 - May 2014</span>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"resume-item d-flex flex-column flex-md-row justify-content-between\">\r\n          <div class=\"resume-content\">\r\n            <h3 class=\"mb-0\">Northwestern University</h3>\r\n            <div class=\"subheading mb-3\">Full Stack Web Developer Bootcamp</div>\r\n          </div>\r\n          <div class=\"resume-date text-md-right\">\r\n            <span class=\"text-primary\">December 2019 - March 2020</span>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </section>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Education;\r\n\r\n\r\n","import React from \"react\";\r\n\r\nclass Skills extends React.Component {\r\n  render() {\r\n    return (\r\n      <section\r\n        class=\"resume-section p-3 p-lg-5 d-flex align-items-center\"\r\n        id=\"skills\"\r\n      >\r\n        <div class=\"w-100\">\r\n          <h2 class=\"mb-5\">Skills</h2>\r\n\r\n          <div class=\"subheading mb-3\">Programming Languages &amp; Tools</div>\r\n          <ul class=\"list-inline dev-icons\">\r\n            <li class=\"list-inline-item\">\r\n              <i class=\"fab fa-html5\"></i>\r\n            </li>\r\n            <li class=\"list-inline-item\">\r\n              <i class=\"fab fa-css3-alt\"></i>\r\n            </li>\r\n            <li class=\"list-inline-item\">\r\n              <i class=\"fab fa-js-square\"></i>\r\n            </li>\r\n            <li class=\"list-inline-item\">\r\n            <i class=\"devicon-sass-original\"></i>\r\n            </li>\r\n            <li class=\"list-inline-item\">\r\n              <i class=\"devicon-jquery-plain\"></i>\r\n            </li>\r\n            <li class=\"list-inline-item\">\r\n              <i class=\"fab fa-react\"></i>\r\n            </li>\r\n            <li class=\"list-inline-item\">\r\n              <i class=\"fab fa-node-js\"></i>\r\n            </li>\r\n            <li class=\"list-inline-item\">\r\n            <i class=\"devicon-mongodb-plain\"></i>\r\n            </li>\r\n            <li class=\"list-inline-item\">\r\n            <i class=\"devicon-mysql-plain\"></i>\r\n            </li>\r\n            <li class='list-inline-item'>\r\n            <i class=\"devicon-sequelize-plain\"></i>\r\n            </li>\r\n            <li class=\"list-inline-item\">\r\n              <i class=\"fab fa-github\"></i>\r\n            </li>\r\n\r\n            <li class=\"list-inline-item\">\r\n            <i class=\"devicon-express-original\"></i>\r\n            </li>\r\n\r\n            <li class=\"list-inline-item\">\r\n              <i class=\"fab fa-npm\"></i>\r\n            </li>\r\n          </ul>\r\n\r\n          <div class=\"subheading mb-3\">Workflow</div>\r\n          <ul class=\"fa-ul mb-0\">\r\n            <li>\r\n              <i class=\"fa-li fa fa-check\"></i>\r\n              Mobile-First, Responsive Design\r\n            </li>\r\n            <li>\r\n              <i class=\"fa-li fa fa-check\"></i>\r\n              Cross Browser Testing &amp; Debugging\r\n            </li>\r\n            <li>\r\n              <i class=\"fa-li fa fa-check\"></i>\r\n              Cross Functional Teams\r\n            </li>\r\n            <li>\r\n              <i class=\"fa-li fa fa-check\"></i>\r\n              Agile Development &amp; Scrum\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\nexport default Skills;\r\n","import React from \"react\";\r\n\r\nfunction Project() {\r\n  return (\r\n    <div class=\"project-info\">\r\n      <section>\r\n        <h3>Case Study 1: API Project</h3>\r\n        <p>\r\n          My first project was designed to showcase my knowledge of APIs as well\r\n          as basic HTML, CSS, and JavaScript concepts. Our requirements were to\r\n          pick virtually any 2 APIs and make a website from it. The APIs would\r\n          have to be instructor approved My partner and I chose for this project\r\n          to use Giphy API as well as an API for basketball stats called\r\n          BallDontLie. Originally we set out to use Youtube to render a\r\n          highlight reel for a player when their name was typed in the search\r\n          bar, but we learned that in the span of time we had it might be too\r\n          difficult since we had to set up a server, so a Gif was rendered to\r\n          the screen instead. Going into the project we had done about 2 weeks\r\n          learning HTML and CSS and the rest of the time mostly JavaScript\r\n          concepts. The idea of doing an entire project was slightly\r\n          intimidating at first, however when taking into consideration the fact\r\n          that we could choose any concept for the project we wanted to as long\r\n          as it met minimum requirements and also got to work with another\r\n          person, it made it more reasonable. One of the primary challenges I\r\n          faced on this project was how we could set the app up to search by the\r\n          players' names when at first it appeared we could only search by id\r\n          number. After some time mulling it over and getting advice from\r\n          various sources, I discovered we could do 2 AJAX calls to the\r\n          database. The first one would get the player's ID number and the\r\n          second would plug that ID number into our next call to the database,\r\n          as shown in the code below.\r\n        </p>\r\n        <br />\r\n        <br />\r\n        <img src={require(\"./images/proj1.png\")} alt=\"code\" />\r\n        <br />\r\n        <br />{\" \"}\r\n        <p>\r\n          This was a big win because it was one of my first big feelings of\r\n          accomplishment. I had spent a day or two stressing and thinking about\r\n          how we were going to get past this, and then to finally put together a\r\n          system that worked was that rush many coders talk about. This project\r\n          was also my first experience into what the real world might be like,\r\n          and being randomly paired to work with someone, and just the chemisty\r\n          you may or may not have with that person as well as the experience of\r\n          working collaboratively to accomplish something. Until now the class\r\n          activites were either alone or possibly with another person, but this\r\n          was our first big project where we had to create something from\r\n          scratch and bounce ideas off another person.\r\n        </p>\r\n        <span>\r\n          Github link:{\" \"}\r\n          <a\r\n            href=\"https://github.com/peterkrumb/Basketball-API\"\r\n            class=\"git-link\"\r\n          >\r\n            https://github.com/peterkrumb/Basketball-API\r\n          </a>\r\n        </span>\r\n        <br></br>\r\n        <span>\r\n          Deployed link:{\" \"}\r\n          <a\r\n            href=\"https://admiring-heisenberg-b3de22.netlify.com/\"\r\n            class=\"git-link\"\r\n          >\r\n            https://admiring-heisenberg-b3de22.netlify.com/\r\n          </a>\r\n        </span>\r\n      </section>\r\n      <br></br>\r\n      <br></br>\r\n      <section>\r\n        <h3>Case Study 2: Dream Garage</h3>\r\n        <p>\r\n          By the time I was working on my second project I'd learned a few new\r\n          technologies and design patterns including Node, Handlebars, MySQL and\r\n          MVC. Using these technologies was a requirement for the second\r\n          project, where I needed to use an API again as well as setting up my\r\n          own database through MySQL. In brainstorming ideas the idea came up of\r\n          making a car buying app like cars.com. We had learned that you could\r\n          narrow the parameters of a query to an external database, and I\r\n          figured that this would work perfectly with buying cars where you\r\n          could specify the make, model, and year of the car as well as other\r\n          things like color and price range, and get back all results from the\r\n          database. There were 3 of us in the group and we all divided the work\r\n          pretty evenly, as opposed to splitting the work up between stacks. The\r\n          majority of my work was on the backend with Node however. Node was\r\n          interesting to learn, because its application meant you can create an\r\n          entire app from the back end, which is what we did using handlebars.\r\n          <br></br>\r\n          <br></br>\r\n          <img src={require(\"./images/garage2 0.png\")} alt=\"garagecode\" />\r\n          <br></br>\r\n          <br></br> The code above represents one challenge we faced making the\r\n          project that we overcame, and this was assigning a unique ID, here\r\n          coined as \"UUID\", to every person who's computer visited the site.\r\n          This was necessary because we weren't at the point of learning yet to\r\n          implement an entire login function so this became the next step. Initially if a car was saved to a user's garage, it would persist for whoever visited it, since the cars were saved to JawsDB which is an add-on for Heroku, sort of a stand-in database. With the Unique ID, we could generate a unique passcode for each system.\r\n        </p>\r\n        <span>\r\n          Github link:{\" \"}\r\n          <a\r\n            href=\"https://github.com/peterkrumb/My-Garage\"\r\n            class=\"git-link\"\r\n          >\r\n           https://github.com/peterkrumb/My-Garage\r\n          </a>\r\n        </span>\r\n        <br></br>\r\n        <span>\r\n          Deployed link:{\" \"}\r\n          <a\r\n            href=\"https://limitless-sands-05500.herokuapp.com/\"\r\n            class=\"git-link\"\r\n          >\r\n           https://limitless-sands-05500.herokuapp.com/\r\n          </a>\r\n        </span>\r\n      </section>\r\n      <br></br>\r\n      <br></br>\r\n      <section>\r\n        <h3>Case Study 3: Hero Box</h3>\r\n        <p>Hero box was my final class project which I worked on with 4 other classmates, and overseen by a TA to help with points of difficulty. This project was intended to be a subscription service for Marvel comic books. It was a complete MERN full stack application, and our first project built from the ground up in React. They say React is supposed to make developers' lives easier, however when you've only been learning it for 2 weeks, it can be quite a struggle building a real world application.\r\n          \r\n          <br></br>\r\n          <br></br>\r\n          \r\n          <br></br>\r\n          <br></br> \r\n        </p>\r\n        <span>\r\n          Github link:{\" \"}\r\n          <a\r\n            href=\"https://github.com/Superb-Owls/Subscription-box\"\r\n            class=\"git-link\"\r\n          >\r\n           https://github.com/Superb-Owls/Subscription-box\r\n          </a>\r\n        </span>\r\n        <br></br>\r\n        <span>\r\n          Deployed link:{\" \"}\r\n          <a\r\n            href=\"https://pacific-chamber-07789.herokuapp.com/\"\r\n            class=\"git-link\"\r\n          >\r\n           https://pacific-chamber-07789.herokuapp.com/\r\n          </a>\r\n        </span>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Project;\r\n","import React from 'react'\r\nimport Project from '../Project'\r\n\r\nclass Projects extends React.Component{\r\n    render() {\r\n        return(\r\n            <>\r\n            <Project />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Projects;","import React from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport About from './components/pages/About';\nimport Nav from './components/Nav'\nimport './App.scss'\nimport './index.scss'\nimport Education from './components/pages/Education';\nimport Skills from './components/pages/Skills';\nimport Projects from './components/pages/Projects';\n\nfunction App () {\n  return(\n    <Router>\n    \n    <Nav /> \n    <Route exact path=\"/\" component={About} />\n    <Route exact path=\"/Education\" component={Education} />\n    <Route exact path=\"/Skills\" component={Skills} />\n    <Route exact path=\"/Projects\" component={Projects} />\n    </Router>\n  )\n  };\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}